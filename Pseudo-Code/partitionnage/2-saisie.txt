procédure initTab(sortF tab: s_tab) c'est
début
	tab.nbBin := 0;
	tab.saisiBin := FAUX;

	tab.nbHexa := 0;
	tab.saisiHexa := FAUX;

	tab.nbEnt := 0;
fin

procédure saisiBin(entF/sortF tab: s_tab) c'est
début
	tab.saisiBin := VRAI;
	saisi: caractere;

	lireClavier(saisi);

	// Vérifie que le premier caractère vaut 0 ou 1 sinon Erreur
	répéter
		ecrireEcran("Erreur: un nombre binaire est constitué exclusivement de 0 et de 1.");
		ecrireEcran("Entrer un nombre binaire :");
		lireClavier(saisi);
	jusqu'à ((saisi=='0') OU (saisi=='1'))

	tab.nbBin++;

	tantque ((tab.nbBin <= MAX_SAISI_BIN) ET ((saisi=='0') OU (saisi=='1'))) faire
		tab.t_bin[tab.nbBin] := saisi;
		tab.nbBin++;
		lireClavier(saisi);
	finFaire
fin

procédure saisiEntier(entF/sortF tab: s_tab) c'est
début
	saisi: caractere;
	i, j: entier;
	
	lireClavier(saisi);

	répéter
		ecrireEcran("Erreur: un nombre est exclusivement constitué de chiffre.");
		ecrireEcran("Entrer un nombre :");
		lireClavier(saisi);
	jusqu'à ((saisi >= 0) ET (saisi <= 9))

	tab.nbEnt++;

	tantque ((tab.nbEnt <= MAX_SAISI_ENT) ET ((saisi >= 0) ET (saisi <= 9))) faire
		tab.t_ent[tab.nbEnt] := saisi;
		tab.nbEnt++;
		lireClavier(saisi);
	finFaire

	// Converti le tableau de caractère en entier
	i := 0;
	j := tab.nbEnt;
	tab.resEnt := 0;
	tantque (((i+1) <= tab.nbEnt) ET (j >= 1)) faire
		tab.resEnt := tab.resEnt + atoi(tab.t_ent[j]) * 10^i;
		i++;
		j--;
	finFaire

	// Vérifie que resEnt < MAX_ENT sinon resEnt := MAX_ENT
	si (tab.resEnt > MAX_ENT) alors
		tab.resEnt := MAX_ENT;

		k: entier;		
		pour k de 1 à tab.nbEnt faire
			tab.t_ent[i] := MAX_ENT_CHAINE.charAt(i);
		finFaire
	finSi
fin

procédure saisiHexa(entF/sortF tab: s_tab) c'est
début
	tab.saisiHexa := VRAI;
	saisi: caractere;
	e: ensemble;
	e := {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'a', 'b', 'c', 'd', 'e', 'f'};

	lireClavier(saisi);

	répéter
		ecrireEcran("Erreur: un nombre hexadécimal est constitué de chiffre et/ou des lettres A à F.");
		ecrireEcran("Entrer un nombre hexadécimal :");
		lireClavier(saisi);
	jusqu'à (saisi dans e)

	tab.nbHexa++;

	tantque ((tab.nbHexa <= MAX_SAISI_HEXA) ET (saisi dans e)) faire
		tab.t_hexa[tab.nbHexa] := saisi;
		tab.nbHexa++;
		lireClavier(saisi);
	finFaire
fin